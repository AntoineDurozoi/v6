<?php
/**
* Securitycheck Pro MalwarescanStatus Controller
* @ author Jose A. Luque
* @ Copyright (c) 2011 - Jose A. Luque
* @license GNU/GPL v2 or later http://www.gnu.org/licenses/gpl-2.0.html
*/

// Protección frente a accesos no autorizados
defined('_JEXEC') or die('Restricted Access');

// Cargamos las clases base
jimport('joomla.application.component.controller');

/**
 * Controlador de la clase MalwarescanStatus
 *
 */
class SecuritycheckprosControllerMalwarescanStatus extends JControllerLegacy
{

public function  __construct() {
		parent::__construct();
}

/* Mostramos la pantalla de estado */
public function display($cachable = false, $urlparams = Array())
{
	JRequest::setVar( 'view', 'malwarescanstatus' );
	JRequest::setVar('hidemainmenu', 1);
		
	parent::display();
}
	

/* Redirecciona las peticiones al Panel de Control de Escaner de malware */
function redireccion_malwarescan_control_panel()
{
	$mainframe = JFactory::getApplication();	
	$mainframe->setUserState('contenido', "vacio");
	$this->setRedirect( 'index.php?option=com_securitycheckpro&controller=filemanager&task=malwarescan_panel&'. JSession::getFormToken() .'=1' );
}

/* Añade ruta(s) a la lista de excepciones */
function addfile_exception()
{
	$model = $this->getModel("malwarescanstatus");
	$model->addfile_exception('malwarescan');
	
	JRequest::setVar( 'view', 'malwarescanstatus' );
	
	parent::display();
}

/* Borra ruta(s) de la lista de excepciones */
function deletefile_exception()
{
	$model = $this->getModel("malwarescanstatus");
	$model->deletefile_exception('malwarescan');
	
	JRequest::setVar( 'view', 'malwarescanstatus' );
	
	parent::display();
}

/* Chequea archivos contra el servicio OPWAST Metadefender Cloud */



function online_check_files()
{
	$model = $this->getModel("malwarescanstatus");
	$error = $model->online_check_files();
	
	if ( !$error ) {
		$this->setRedirect( 'index.php?option=com_securitycheckpro&controller=onlinechecks&view=onlinechecks&'. JSession::getFormToken() .'=1' );
	} else {
		JRequest::setVar( 'view', 'malwarescanstatus' );
	
		parent::display();
	}
	
}

/* Chequea hashes contra el servicio OPWAST Metadefender Cloud */
function online_check_hashes()
{
	$model = $this->getModel("malwarescanstatus");
	$error = $model->online_check_hashes();

	
	if ( !$error ) {
		$this->setRedirect( 'index.php?option=com_securitycheckpro&controller=onlinechecks&view=onlinechecks&'. JSession::getFormToken() .'=1' );
	} else {
		JRequest::setVar( 'view', 'malwarescanstatus' );
	
		parent::display();
	}
}

/* Añade ruta(s) a la lista de excepciones */
function manage_online_logs()
{
	$this->setRedirect( 'index.php?option=com_securitycheckpro&controller=onlinechecks&view=onlinechecks&'. JSession::getFormToken() .'=1' );
}

/* Restaura archivos movidos a la carpeta 'quarantine' */
function restore_quarantined_file()
{
	$model = $this->getModel("malwarescanstatus");
	$model->quarantined_file('restore');
	
	JRequest::setVar( 'view', 'malwarescanstatus' );
	
	parent::display();
}

/* Borra archivos movidos a la carpeta 'quarantine' */
function delete_quarantined_file()
{
	$model = $this->getModel("malwarescanstatus");
	$model->quarantined_file('delete');
	
	JRequest::setVar( 'view', 'malwarescanstatus' );
	
	parent::display();
}

/**
 * Exportar logs en formato csv
 */
function csv_export()
{
	// Obtenemos los archivos reportados
	$model = $this->getModel("malwarescanstatus");
	$items = $model->loadStack("malwarescan","malwarescan");
	$csv_export = "";
		
	// Cabecera del archivo
	$headers = array(JText::_( 'COM_SECURITYCHECKPRO_FILEMANAGER_RUTA'),JText::_( 'COM_SECURITYCHECKPRO_FILEMANAGER_TAMANNO' ),JText::_('COM_SECURITYCHECKPRO_FILEMANAGER_LAST_MODIFIED'),JText::_('COM_SECURITYCHECKPRO_MALWARESCAN_TYPE'), JText::_('COM_SECURITYCHECKPRO_MALWARESCAN_DESCRIPTION'), JText::_('COM_SECURITYCHECKPRO_MALWARESCAN_CODE_DESCRIPTION'), JText::_('COM_SECURITYCHECKPRO_MALWARESCAN_ALERT_LEVEL'), 'Safe', 'Hash', 'Data_id', 'Rest_ip', JText::_( 'COM_SECURITYCHECKPRO_MALWARESCAN_ONLINE_CHECK' ), JText::_( 'COM_SECURITYCHECKPRO_MOVED_TO_QUARANTINE' ), 'Quarantined file name');
	$csv_export .= implode(";",$headers);

	for ($i = 0 , $n = count($items) ; $i < $n ; $i++) {		
		$csv_export .= "\n" .implode(";",$items[$i]);
	}
	
	// Mandamos el contenido al navegador
	$config = JFactory::getConfig();
	$sitename = $config->get('sitename');
	// Remove whitespaces of sitename
	$sitename = str_replace(' ', '', $sitename);
	$timestamp = date('mdy_his');
	$filename = "securitycheckpro_malwarescan_results_" . $sitename . "_" . $timestamp . ".csv";
	@ob_end_clean();	
	ob_start();	
	header( 'Content-Type: text/csv' );
	header( 'Content-Disposition: attachment;filename=' . $filename );
	print $csv_export;
	exit();
	
}

/* Función para borrar archivos sospechosos */
function delete()
{
	$model = $this->getModel("malwarescanstatus");
	$model->delete_files();
	
	$mainframe = JFactory::getApplication();	
	$mainframe->setUserState('contenido', "vacio");
	
	JRequest::setVar( 'view', 'malwarescanstatus' );
	parent::display();	
}

/* Función para borrar archivos sospechosos */
function view_file()
{
	$model = $this->getModel("malwarescanstatus");
	$model->view_file();
	
	JRequest::setVar( 'view', 'malwarescanstatus' );
	parent::display();	
}

}